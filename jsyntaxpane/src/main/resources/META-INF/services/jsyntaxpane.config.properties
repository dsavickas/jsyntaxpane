#
# Main Configuration of JSyntaxPane
#
# -----------------------------------------------------------------------------
#
# These will be used by all kits, unless the same key is used for a specific
# kit, in which case the specific will be used:
#
# These are the componets that will be installed be default for any kit, unless
# specified otherwise
Components = jsyntaxpane.components.PairsMarker, \
    jsyntaxpane.components.LineNumbersRuler
# This is the color to highlight tokens whenever the cursor is on them
TokenMarker.Color = 0xffeeaa
# Colors for PairMarkers
PairMarker.Color = 0xffbb77
#
# Right Margin for LineNumbers border in pixels, Default = 5
LineNumbers.RightMargin = 7
# Foreground for line numbers, Default = Black
LineNumbers.Foreground = 0x333300
# Background for line numbers, Default = White
LineNumbers.Background = 0xeeeeff
# Y Offset for Line Numbers (can be anything.  Default = -2
LineNumbers.YOFFset = -1
# Default color for the Caret, Black
CaretColor = 0x000000
#
# Actions:
# The key is of the format:
# Actions.NAME = class, key [, key]*
# where NAME is the name to be given to the Action.  Any STring is valid.
# class is the fully qualified class name of the SyntaxAction class.
# Starting from 0.9.5, each Action will instantiate a new class.  If you need
# to share some data between the Actions, then add a Property to the Document
# Key is the keyboard key to map it to as specified by
# KeyStroke.getKeyStroge(String key).  You may have zero or more key bindings
# to an Action.  
#
Action.FIND = jsyntaxpane.actions.FindReplaceAction, control F, control H
Action.FIND_NEXT = jsyntaxpane.actions.FindNextAction, F3
Action.GOTO_LINE = jsyntaxpane.actions.GotoLineAction, control G
Action.INDENT = jsyntaxpane.actions.IndentAction, TAB
Action.UNINDENT = jsyntaxpane.actions.UnindentAction, shift TAB
Action.JINDENT = jsyntaxpane.actions.JIndentAction, ENTER
Action.UNDO = jsyntaxpane.actions.UndoAction, control Z
Action.REDO = jsyntaxpane.actions.RedoAction, control Y
Action.DELETE_LINES = jsyntaxpane.actions.DeleteLinesAction, control E
Action.DUPLICATE_LINES_UP = jsyntaxpane.actions.DuplicateLinesAction, shift control UP
Action.DUPLICATE_LINES_DOWN = jsyntaxpane.actions.DuplicateLinesAction, shift control DOWN
Action.TOGGLE_LINES = jsyntaxpane.actions.ToggleComponentAction, control F2
TOGGLE_LINES.Component = jsyntaxpane.components.LineNumbersRuler
#
# View configuration:
# This controls how text is anti-aliased on the editor control:
# see the RenderingHints.VALUE_TEXT_ANTIALIAS.... for details
# DEFAULT: use the JRE default (default value)
# ON: set to on, let the JRE determine best method for the display
# OFF: no AA
# GASP: used on GTK
# HBGR:
# HRGB:
# VBGR:
# VRGM
TextAA = ON
#
# JavaSyntaxKit
#
JavaSyntaxKit.Components = jsyntaxpane.components.PairsMarker, \
    jsyntaxpane.components.LineNumbersRuler, \
    jsyntaxpane.components.TokenMarker
JavaSyntaxKit.TokenMarker.TokenTypes = IDENTIFIER, TYPE, TYPE2, TYPE3
#
# Performs single color selection (Default = false)
#
JavaSyntaxKit.SingleColorSelect = true
#
# DIsplaying of a right margin line.  If RightMarginColumn is 0, then no margin
# will be displayed
JavaSyntaxKit.RightMarginColumn = 80
JavaSyntaxKit.RightMarginColor = 0xdddddd
JavaSyntaxKit.Action.PARENTHISIS = jsyntaxpane.actions.PairAction, typed (
# JavaSyntaxKit.Action.TOGGLE_LINES = jsyntaxpane.actions.ToggleComponentAction, control F2
# JavaSyntaxKit.TOGGLE_LINES.Component = jsyntaxpane.components.LineNumbersRuler
JavaSyntaxKit.Action.TOGGLE_TOKEN_MARKER = jsyntaxpane.actions.ToggleComponentAction, control F3
JavaSyntaxKit.TOGGLE_TOKEN_MARKER.Component = jsyntaxpane.components.TokenMarker
JavaSyntaxKit.Action.BRACKETS = jsyntaxpane.actions.PairAction, typed [
JavaSyntaxKit.Action.QUOTE = jsyntaxpane.actions.PairAction, typed '
JavaSyntaxKit.Action.DBL_QUOTE = jsyntaxpane.actions.PairAction, typed "
JavaSyntaxKit.Action.CLOSE_CURLY = jsyntaxpane.actions.JUnindentAction, typed }
JavaSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control SLASH
# For completions, you have to define the Action (key to trigger completions):
JavaSyntaxKit.Action.COMBO_COMPELTION = jsyntaxpane.actions.ComboCompletionAction, control SPACE
JavaSyntaxKit.Action.REFLECT_COMPELTION = jsyntaxpane.actions.ReflectCompletionAction, control I, shift F1
# Enclose selection: Try Catch
JavaSyntaxKit.Action.ENCLOSE_IN_TRY_CATCH = jsyntaxpane.actions.SurroundWithAction, control T
JavaSyntaxKit.ENCLOSE_IN_TRY_CATCH.prefix = try {\n
JavaSyntaxKit.ENCLOSE_IN_TRY_CATCH.postfix = } catch(Exception e) {\n} finally {\n}\n
# Enclose selection: Try Catch
JavaSyntaxKit.Action.ENCLOSE_IN_WHILE = jsyntaxpane.actions.SurroundWithAction, control W
JavaSyntaxKit.ENCLOSE_IN_WHILE.prefix = while(condition) {\n
JavaSyntaxKit.ENCLOSE_IN_WHILE.postfix = }\n
# and then the specified completions map in the below file
JavaSyntaxKit.Completions.File = jsyntaxpane.javasyntaxkit.completions
#
# These are the completions to be in the IntelliSense completion dialog
# comma separated values.
# Vertical bars: if there is one, it will position the cursor.  If there are
# two, they will be start and end of selection
JavaSyntaxKit.COMBO_COMPELTION.Items.URL=jsyntaxpane.javasyntaxkit.combocompletions.txt
#
# Popup menus: if available, then these are the items to show in a Popup menu
# One value for the key is used.  The items are separated by a comma
# Each menu item can be:
#   Text=Action[=icon]
#   - (for a separator)
#   icons should be located in /META-INF/images
JavaSyntaxKit.PopupMenu = \
  Cut=cut-to-clipboard=cut.png                    , \
  Copy=copy-to-clipboard=copy.png                 , \
  Paste=paste-from-clipboard=paste.png            , \
  -                                               , \
  Select All=select-all = select-all.png          , \
  -                                               , \
  Undo=UNDO=undo.png                              , \
  Redo=REDO=redo.png                              , \
  -                                               , \
  Indent=INDENT = indent.png                      , \
  Un-indent=UNINDENT = unindent.png               , \
  -                                               , \
  Goto Line=GOTO_LINE=number.png                  , \
  Toggle Comments=TOGGLE_COMMENTS=comment.png     , \
  -                                               , \
  Find and Replace=FIND=find.png                  , \
  Find Next=FIND_NEXT=find-next.png               , \
  -                                               , \
  Completions = REFLECT_COMPELTION = completions.png, \
  >Surround with                                  , \
  Try-Catch = ENCLOSE_IN_TRY_CATCH                , \
  While Loop = ENCLOSE_IN_WHILE                   , \
  <                                               , \
  Toggle Line Numbers = TOGGLE_LINES              , \
  Toggle Token Markers = TOGGLE_TOKEN_MARKER

#
# Other Java type actions for other languages:
#
JavaScriptSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control SLASH
GroovySyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control SLASH
CSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control SLASH
CppSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control SLASH
# The LineComments Characters can be enclosed in double quotes if spaces are present
# in them
GroovySyntaxKit.TOGGLE_COMMENTS.LineComments = "// "
# For Groovy, we want the comments to be grey:
GroovySyntaxKit.Style.COMMENT = 0x666666, 2
#
# Other Languages
RubySyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control NUMBER_SIGN
RubySyntaxKit.TOGGLE_COMMENTS.LineComments = "# "
PythonSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control NUMBER_SIGN
PythonSyntaxKit.TOGGLE_COMMENTS.LineComments = "# "
# -----------------------------------------------------------------------------
#
# These are the componets that will be installed for XML
#
XmlSyntaxKit.Components = jsyntaxpane.components.PairsMarker, \
    jsyntaxpane.components.LineNumbersRuler
XmlSyntaxKit.PairMarker.Color = 0xffeeaa
XmlSyntaxKit.Action.PRETTIFY = jsyntaxpane.actions.XmlPrettifyAction, control P
XmlSyntaxKit.Action.TAG_CLOSE = jsyntaxpane.actions.XmlTagCompleteAction, typed >
XmlSyntaxKit.PopupMenu = \
  Cut=cut-to-clipboard=cut.png                    , \
  Copy=copy-to-clipboard=copy.png                 , \
  Paste=paste-from-clipboard=paste.png            , \
  -                                               , \
  Select All=select-all = select-all.png          , \
  -                                               , \
  Undo=UNDO=undo.png                              , \
  Redo=REDO=redo.png                              , \
  -                                               , \
  Find and Replace=FIND=find.png                  , \
  Find Next=FIND_NEXT=Find-next.png               , \
  -                                               , \
  Reformat XML=PRETTIFY                           , \
  Toggle Line Numbers = TOGGLE_LINES              
#
# DOS Batch Specifics
#
DOSBatchSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control NUMBER_SIGN
DOSBatchSyntaxKit.TOGGLE_COMMENTS.LineComments = "rem "
DOSBatchSyntaxKit.PopupMenu = \
  Cut=cut-to-clipboard=cut.png                    , \
  Copy=copy-to-clipboard=copy.png                 , \
  Paste=paste-from-clipboard=paste.png            , \
  -                                               , \
  Select All=select-all = select-all.png          , \
  -                                               , \
  Undo=UNDO=undo.png                              , \
  Redo=REDO=redo.png                              , \
  -                                               , \
  Toggle Comments=TOGGLE_COMMENTS=comment.png     , \
  -                                               , \
  Find and Replace=FIND=find.png                  , \
  Find Next=FIND_NEXT=Find-next.png
#
# Bash Specifics
#
BashSyntaxKit.Action.TOGGLE_COMMENTS = jsyntaxpane.actions.ToggleCommentsAction, control NUMBER_SIGN
BashSyntaxKit.TOGGLE_COMMENTS.LineComments = "# "
BashSyntaxKit.PopupMenu = \
  Cut=cut-to-clipboard=cut.png                    , \
  Copy=copy-to-clipboard=copy.png                 , \
  Paste=paste-from-clipboard=paste.png            , \
  -                                               , \
  Select All=select-all = select-all.png          , \
  -                                               , \
  Undo=UNDO=undo.png                              , \
  Redo=REDO=redo.png                              , \
  -                                               , \
  Toggle Comments=TOGGLE_COMMENTS=comment.png     , \
  -                                               , \
  Find and Replace=FIND=find.png                  , \
  Find Next=FIND_NEXT=Find-next.png